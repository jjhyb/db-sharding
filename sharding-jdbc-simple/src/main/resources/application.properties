server.port=8080

spring.application.name=sharding-jdbc-simple-demo
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.main.allow-bean-definition-overriding=true
mybatis.configuration.map-underscore-to-camel-case=true

mybatis.type-aliases-package: com.yibo.dbsharding.domain.entity
mybatis.mapper-locations: classpath:mapper/*.xml
mapper.identity: MYSQL
mapper.not-empty: false

#sharding-jdbc分片规则配置
#数据源
spring.shardingsphere.datasource.names=master1,master2,usermaster,userslave1

spring.shardingsphere.datasource.usermaster.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.usermaster.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.usermaster.url=jdbc:mysql://localhost:3306/sharding_userdb?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.usermaster.username=root
spring.shardingsphere.datasource.usermaster.password=yibo

spring.shardingsphere.datasource.userslave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.userslave1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.userslave1.url=jdbc:mysql://localhost:3307/sharding_userdb?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.userslave1.username=root
spring.shardingsphere.datasource.userslave1.password=yibo

spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://localhost:3306/sharding_orderdb_1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=yibo

spring.shardingsphere.datasource.master2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master2.url=jdbc:mysql://localhost:3306/sharding_orderdb_2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.master2.username=root
spring.shardingsphere.datasource.master2.password=yibo

# 主库从库逻辑数据源定义，读写分离
spring.shardingsphere.sharding.master-slave-rules.usermasterslave.master-data-source-name=usermaster
spring.shardingsphere.sharding.master-slave-rules.usermasterslave.slave-data-source-names[0]=userslave1

# 分库策略，以user_id为分片键，分片策略为user_id % 库的总数 + 1
spring.shardingsphere.sharding.tables.trade_order.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.trade_order.database-strategy.inline.algorithm-expression=master$->{user_id % 2 + 1}

# 指定trade_order表的数据分布情况，配置数据节点
spring.shardingsphere.sharding.tables.trade_order.actual-data-nodes=master$->{1..2}.trade_order_$->{1..2}

# 指定trade_user表的数据分布情况，配置数据节点
#spring.shardingsphere.sharding.tables.trade_user.actual-data-nodes=user_m1.trade_user
spring.shardingsphere.sharding.tables.trade_user.actual-data-nodes=usermasterslave.trade_user

# 指定trade_order表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.trade_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.trade_order.key-generator.type=SNOWFLAKE

# 指定trade_order表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.trade_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.trade_order.table-strategy.inline.algorithm-expression=trade_order_$->{order_id % 2 + 1}

# 指定trade_user表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.trade_user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.trade_user.table-strategy.inline.algorithm-expression=trade_user

# 指定trade_dict表为公共表
spring.shardingsphere.sharding.broadcast-tables=trade_dict

# 打开sql输入日志
spring.shardingsphere.props.sql.show=true

# sql的日志信息
logging.level.root= info
logging.level.org.springframework.web=info
logging.level.com.yibo.dbsharding=debug
logging.level.druid.sql=debug

# mybatis的sql输出信息
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.Java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG