server.port=8080

spring.application.name=sharding-jdbc-case
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.main.allow-bean-definition-overriding=true
mybatis.configuration.map-underscore-to-camel-case=true

mybatis.type-aliases-package: com.yibo.shardingcase.domain.entity
mybatis.mapper-locations: classpath:mapper/*.xml
mapper.identity: MYSQL
mapper.not-empty: false

swagger.enable=true

#sharding-jdbc分片规则配置
#数据源
spring.shardingsphere.datasource.names=storemaster,storeslave,productmaster1,productmaster2,productslave1,productslave2

spring.shardingsphere.datasource.storemaster.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.storemaster.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.storemaster.url=jdbc:mysql://localhost:3306/store_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.storemaster.username=root
spring.shardingsphere.datasource.storemaster.password=yibo

spring.shardingsphere.datasource.storeslave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.storeslave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.storeslave.url=jdbc:mysql://localhost:3307/store_db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.storeslave.username=root
spring.shardingsphere.datasource.storeslave.password=yibo

spring.shardingsphere.datasource.productmaster1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.productmaster1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.productmaster1.url=jdbc:mysql://localhost:3306/product_db_1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.productmaster1.username=root
spring.shardingsphere.datasource.productmaster1.password=yibo

spring.shardingsphere.datasource.productslave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.productslave1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.productslave1.url=jdbc:mysql://localhost:3307/product_db_1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.productslave1.username=root
spring.shardingsphere.datasource.productslave1.password=yibo

spring.shardingsphere.datasource.productmaster2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.productmaster2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.productmaster2.url=jdbc:mysql://localhost:3306/product_db_2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.productmaster2.username=root
spring.shardingsphere.datasource.productmaster2.password=yibo

spring.shardingsphere.datasource.productslave2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.productslave2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.productslave2.url=jdbc:mysql://localhost:3307/product_db_2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.productslave2.username=root
spring.shardingsphere.datasource.productslave2.password=yibo

# 主库从库逻辑数据源定义，读写分离
spring.shardingsphere.sharding.master-slave-rules.storemasterslave.master-data-source-name=storemaster
spring.shardingsphere.sharding.master-slave-rules.storemasterslave.slave-data-source-names[0]=storeslave

spring.shardingsphere.sharding.master-slave-rules.promasterslave1.master-data-source-name=productmaster1
spring.shardingsphere.sharding.master-slave-rules.promasterslave1.slave-data-source-names[0]=productslave1

spring.shardingsphere.sharding.master-slave-rules.promasterslave2.master-data-source-name=productmaster2
spring.shardingsphere.sharding.master-slave-rules.promasterslave2.slave-data-source-names[0]=productslave2

# 分库策略，以store_info_id为分片键，分片策略为store_info_id % 库的总数 + 1
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=store_info_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=promasterslave$->{store_info_id % 2 + 1}

# 分表策略
# store_info分表策略
spring.shardingsphere.sharding.tables.store_info.actual-data-nodes=storemasterslave.store_info
spring.shardingsphere.sharding.tables.store_info.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.store_info.table-strategy.inline.algorithm-expression=store_info

# product_info分表策略
spring.shardingsphere.sharding.tables.product_info.actual-data-nodes=promasterslave$->{1..2}.product_info_$->{1..2}
spring.shardingsphere.sharding.tables.product_info.table-strategy.inline.sharding-column=product_info_id
spring.shardingsphere.sharding.tables.product_info.table-strategy.inline.algorithm-expression=product_info_$->{product_info_id % 2 +1}
spring.shardingsphere.sharding.tables.product_info.key-generator.column=product_info_id
spring.shardingsphere.sharding.tables.product_info.key-generator.type=SNOWFLAKE

# product_descript分表策略
spring.shardingsphere.sharding.tables.product_descript.actual-data-nodes=promasterslave$->{1..2}.product_descript_$->{1..2}
spring.shardingsphere.sharding.tables.product_descript.table-strategy.inline.sharding-column=product_info_id
spring.shardingsphere.sharding.tables.product_descript.table-strategy.inline.algorithm-expression=product_descript_$->{product_info_id % 2 +1}
spring.shardingsphere.sharding.tables.product_descript.key-generator.column=id
spring.shardingsphere.sharding.tables.product_descript.key-generator.type=SNOWFLAKE

# 设置product_info和product_descript为绑定表
spring.shardingsphere.sharding.binding-tables[0]=product_info,product_descript

# 指定region表为公共表，每次更新操作会发送至所有数据源
spring.shardingsphere.sharding.broadcast-tables=region

# 打开sql输入日志
spring.shardingsphere.props.sql.show=true

# sql的日志信息
logging.level.root= info
logging.level.org.springframework.web=info
logging.level.com.yibo.shardingcase=debug
logging.level.druid.sql=debug

# mybatis的sql输出信息
#log4j.logger.com.ibatis=DEBUG
#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.Java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG